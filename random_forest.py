# -*- coding: utf-8 -*-
"""Random_Forest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pCfHhR9xOWtpW7NnUbSAqE3_A3OhEUyN

#Cover Page

**Developed by:**

**Mohamed Fathi - 41810059**

**Ahmed Saber - 41810077**

#Import the dataset from drive
"""

!gdown --id 1MbUWPsEZJ_Dana5RC07wUGTIgzN92Uld

"""#Importing libraries"""

import pandas as pd
import seaborn as sns
import numpy as np
from sklearn.neighbors import KNeighborsClassifier
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix,accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import mean_squared_error
from sklearn.metrics import mean_absolute_error

"""# show how the data looks like"""

data = pd.read_csv('seeds.csv')
data.head(5)

"""#Normalization"""

df = data.drop('Type', axis=1)
df_norm = (df-df.min())/(df.max()-df.min())
df_norm = pd.concat((df_norm, data.Type), 1)
df_norm.head()

"""#Start Split the data and train"""

X_train, X_test, y_train, y_test = train_test_split(df_norm.drop('Type', axis=1), df_norm['Type'], test_size = 0.20)
print(len(X_train), "train +", len(X_test), "valid")

"""#Using Random_Forest for trainning """

model = RandomForestClassifier()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
cm

sns.heatmap(cm, annot=True)
plt.xlabel('Prediction')
plt.ylabel('Truth')

"""**Accuracy** """

var="%"
print("Accuracy: %0.1f" % (model.score(X_test,y_test)*100), var[0])

"""#find the mean square error"""

lin_mse = mean_squared_error(y_test, y_pred)
lin_rmse = np.sqrt(lin_mse)
lin_rmse

lin_mae = mean_absolute_error(y_test, y_pred)
lin_mae